@import "./colors";
@import "./functions";

$middot: '\b7';

@mixin h-list($separator: $middot) {
  margin: 0;
  padding: 0;
  list-style-type: none;

  li {
    position: relative;
    display: inline-block;
    margin: 0;
    padding: 0 .5em;

    @if $separator != false {
      &:not(:first-child):before {
        content: '#{$separator}';
        position: absolute;
        left: -.5em;
        width: 1em;
        text-align: center;
      }
    }
  }
}

@mixin rhombi($colors: $color-scheme, $size: 1.5em, $pad: 0, $randomize: true) {

  $space: $size + $pad;
  $count: length($colors);
  $med: ($count - 1) / 2;
  $shadow-offset: $space;
  $bbox-offset: $space;
  $bbox-translation: $space * $med + $bbox-offset;

  $rhombus-definition-list: ();
  @for $i from 0 through length($colors) - 1 {
    $color: nth($colors, $i + 1);

    $rhombus-offset-x: ($space * $i) + $shadow-offset;
    $rhombus-offset-y: ($space * $i * -1) - $shadow-offset;
    @if $randomize {
      $rhombus-offset-x: $rhombus-offset-x - small-random();
      $rhombus-offset-y: $rhombus-offset-y - small-random();
    }

    $rhombus-definition-list: append(
                    $rhombus-definition-list,
                    unquote('#{$rhombus-offset-x $rhombus-offset-y $color}'),
                    'comma'
    );
  }

  display: inline-block;
  border: 0 none;
  width: $size;
  height: $size;
  transform: rotateZ(45deg) translateX($bbox-translation * -1) translateY($bbox-translation);
  box-shadow: unquote('#{$rhombus-definition-list}');
}
